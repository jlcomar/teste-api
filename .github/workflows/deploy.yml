name: Python CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install --upgrade pip pytest

      - name: Run tests
        run: python main.py

  build:
    needs: test  # Só será executado se os testes passarem
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/myapp:latest .

      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/myapp:latest

  deploy:
    needs: build  # Executa o deploy somente após o job "build"
    runs-on: ubuntu-latest

    steps:
      - name: SSH to Server and Deploy Container
        env:
          HOST: ${{ secrets.REMOTE_HOST }}
          USER: ${{ secrets.REMOTE_USER }}
          PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          IMAGE: ${{ secrets.DOCKER_USERNAME }}/myapp:latest
        run: |
          echo "${PRIVATE_KEY}" > private_key.pem
          chmod 600 private_key.pem
          scp -i private_key.pem docker-compose.yml ${USER}@${HOST}:~/deploy/
          ssh -i private_key.pem ${USER}@${HOST} "
            docker pull ${IMAGE} &&
            docker-compose -f ~/deploy/docker-compose.yml up -d --force-recreate
          "

name: Docker CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  checkout:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

  test_services:
    needs: checkout
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [service1, service2]  # Rodando os testes dos dois serviÃ§os em paralelo
    steps:
      - name: Build and test ${{ matrix.service }}
        run: |
          docker build -f ${{ matrix.service }}/Dockerfile -t ${{ matrix.service }}:latest ./${{ matrix.service }}
          docker run ${{ matrix.service }}:latest python -m unittest discover -s ${{ matrix.service }}/tests

  build_and_push:
    needs: test_services
    runs-on: ubuntu-latest
    steps:
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push service images
        run: |
          docker build -f service1/Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/service1:latest ./service1
          docker push ${{ secrets.DOCKER_USERNAME }}/service1:latest
          docker build -f service2/Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/service2:latest ./service2
          docker push ${{ secrets.DOCKER_USERNAME }}/service2:latest
          docker system prune -f  # Limpeza de imagens antigas

  deploy:
    needs: build_and_push
    runs-on: ubuntu-latest
    steps:
      - name: SSH to server and deploy containers
        env:
          HOST: ${{ secrets.REMOTE_HOST }}
          USER: ${{ secrets.REMOTE_USER }}
          PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          echo "${PRIVATE_KEY}" > private_key.pem
          chmod 600 private_key.pem
          scp -i private_key.pem docker-compose.yml ${USER}@${HOST}:~/deploy/
          ssh -i private_key.pem ${USER}@${HOST} "
            docker-compose pull  # Atualiza as imagens no servidor
            docker-compose -f ~/deploy/docker-compose.yml up -d --force-recreate
          "
